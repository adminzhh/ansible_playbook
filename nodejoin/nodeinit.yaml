- name: node join k8s cluster
  hosts: nodes
  vars:
    master: "192.168.1.50:6443"
    token: "#####you token #####"
    token_hash: "sha256:##### you token ca hash #####"
  tasks:
    - name: disable swap from fstab file
      lineinfile:
        path: /etc/fstab
        state: absent
        regexp: 'swap'
    - name: remove firewalld packages
      dnf:
        name: "firewalld-*"
        state: absent
    - name: install k8s node packages
      dnf:
        name: kubeadm,kubelet,kubectl,containerd.io,ipvsadm,ipset,iproute-tc
        state: latest
        update_cache: yes
    - name: update modify config.toml
      template:
        src: config.j2
        dest: /etc/containerd/config.toml
        owner: root
        group: root
        mode: '0644'
    - name: create containerd.conf
      copy:
        dest: /etc/modules-load.d/containerd.conf
        owner: root
        group: root
        mode: '0644'
        content: |
          overlay
          br_netfilter
          xt_conntrack
    - name: create 99-kubernetes-cri.conf
      copy:
        dest: /etc/sysctl.d/99-kubernetes-cri.conf
        owner: root
        group: root
        mode: '0644'
        content: |
          net.ipv4.ip_forward = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.netfilter.nf_conntrack_max = 1000000
    - name: set /etc/hosts
      copy:
        dest: /etc/hosts
        owner: root
        group: root
        mode: '0644'
        content: |
          ::1		localhost localhost.localdomain localhost6 localhost6.localdomain6
          127.0.0.1	localhost localhost.localdomain localhost4 localhost4.localdomain4
          192.168.1.30	harbor
          192.168.1.50	master
          {% for i in groups.nodes %}
          {{ hostvars[i].ansible_eth0.ipv4.address }}	{{ hostvars[i].ansible_hostname }}
          {% endfor %}
    - name: enable k8s kubelet,runtime service
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - systemd-modules-load
        - containerd
        - kubelet
    - name: check node state
      stat:
        path: /etc/kubernetes/kubelet.conf
      register: result
    - name: node join cluster
      shell: |
        swapoff -a
        sysctl -p /etc/sysctl.d/99-kubernetes-cri.conf
        kubeadm join {{ master }} --token {{ token }} --discovery-token-ca-cert-hash {{ token_hash }}
      args:
        executable: /bin/bash
      when: result.stat.exists == False
